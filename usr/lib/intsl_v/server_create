#!/usr/bin/env bash
echo "サーバー名を入力してください。"
if [[ -z "${input_server_name}" ]]; then
    read -p ">" input_server_name
fi
if [[ ${setting_package_mode} = "false" ]]; then
    echo "サーバーのディレクトリーを指定してください。"
    echo "default: home/test_user/intsl_v"
    read -p ">" input_data
    input_data=${input_data:-home/test_user/intsl_v}
    mc_server_create_file_dir="$input_data"
elif [[ ${setting_package_mode} = "true" ]]; then
    mc_server_create_file_dir="${HOME}/intsl_v"
fi
if [[ -e "${mc_server_create_file_dir}/${input_server_name}" ]]; then
    echo "既に使用されているサーバー名です。"
    echo "使用可能な代替案:"
    for i in $(seq 1 7); do
        if [[ ! -e "${mc_server_create_file_dir}/${input_server_name}${i}" ]]; then
            echo -e "- ${ECHO_GREEN_COLOR}${i}: ${input_server_name}${i} ✓使用可能 ${ECHO_COLOR_EXIT}"
        else
            echo -e "- ${ECHO_RED_COLOR}${i}: ${input_server_name}${i} ✕使用不可${ECHO_COLOR_EXIT}"
            not_available_count=$((not_available_count + 1))
        fi
        if [[ ${not_available_count} = "7" ]]; then
            echo "全ての代替手段が使用できません。"
        fi
    done
    echo "変更する場合は代替案の数字を、しない場合は、nを入力してください。"
    while :; do
        read -p ">" input_alternate_name
        case $input_alternate_name in
        [1] | [2] | [3] | [4] | [5] | [6] | [7])
            if [[ ! -e "${mc_server_create_file_dir}/${input_server_name}${input_alternate_name}" ]]; then
                input_server_name="${input_server_name}${input_alternate_name}"
                break
            else
                echo "使用不可能なサーバー名です。"
            fi
            ;;
        [nN] | [nN][oO])
            echo "キャンセルしました。"
            exit 0
            ;;
        *)
            echo "代替案の数字、またはnを入力してください。"
            ;;
        esac
    done
fi
mkdir $mc_server_create_file_dir/${input_server_name}
mc_donwload_version="$INPUT_SERVER_VERSION"
if [ ${mc_server_edition} = official -o ${mc_server_edition} = spigot -o ${mc_server_edition} = paper ]; then
    srce_edision="server"
    cp ${mc_server_jar_file}${mc_server_edition}${mc_donwload_version}.jar ${mc_server_create_file_dir}/${input_server_name}
fi

. ${SETTING_FILE_LOCATIONS}settings
sed -i ''${server_add_line}'i'"\#${input_server_name}START"'' ${VAR_LIB_FILE_LOCATIONS}server_list
NEWSERVERLANE=$((server_add_line + 1))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

. ${SETTING_FILE_LOCATIONS}settings

sed -i ''${server_add_line}'i'${input_server_name}\)'' ${VAR_LIB_FILE_LOCATIONS}server_list
sed -i ''${server_add_line}'a ;;' ${VAR_LIB_FILE_LOCATIONS}server_list
#sed -i ''${server_add_line}'a . 'usr/lib/intsl_v/mc_server_run/${input_server_name}'''' ${VAR_LIB_FILE_LOCATIONS}server_list
sed -i ''${server_add_line}'a mc_settings_file_locations="'${mc_server_create_file_dir}/${input_server_name}'"''' ${VAR_LIB_FILE_LOCATIONS}server_list

NEWSERVERLANE=$((server_add_line + 4))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

. ${SETTING_FILE_LOCATIONS}settings

sed -i ''$server_add_line'i'"\#${input_server_name}EXIT"'' ${VAR_LIB_FILE_LOCATIONS}server_list
NEWSERVERLANE=$((server_add_line + 1))
sed -i -e 's/server_add_line="'$server_add_line'/server_add_line="'$NEWSERVERLANE'/' ${SETTING_FILE_LOCATIONS}settings

spinner_progress_status="ファイルの確認中 1/2"
run_spinner
if [[ -e $mc_server_create_file_dir/${input_server_name} ]]; then
    echo "サーバーファイルの作成に成功しました。"
    . usr/lib/intsl_v/server_default_settings.sh
    spinner_progress_status="ファイルの確認中 2/2"
    run_spinner
    if [[ ! -e $mc_server_create_file_dir/${input_server_name}/setting.txt ]]; then
        echo "設定ファイルの生成に失敗しました。"
    fi
else
    echo "サーバーファイルの作成に失敗しました。"
    exit 1
fi
exit 0
